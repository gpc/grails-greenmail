buildscript {
    repositories {
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
    }
}

version "2.1.0.RC1"
group "org.grails.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-gsp"
apply plugin:"maven-publish"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails.plugins:gsp"
    profile "org.grails.profiles:web-plugin"
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "org.grails:grails-web-testing-support"

    implementation "com.icegreen:greenmail:1.6.12"
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify', 
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(Test) {
    useJUnitPlatform()
}
bootJar.enabled = false

task sourceJar(type: Jar) {
    from { ["LICENSE.txt"] }
    from sourceSets.main.allSource
    archiveClassifier = "sources"
}

artifacts {
    archives jar, sourceJar
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId project.name
            version project.version
            groupId project.group
            from components.java
            artifact sourceJar
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'GreenMail Plugin'
                    description 'Grails GreenMail Plugin'
                    url 'https://github.com/gpc/greenmail'
                    scm {
                        url 'https://github.com/gpc/greenmail'
                        connection 'scm:git@github.com:gpc/greenmail.git'
                        developerConnection 'scm:git@github.com:gpc/greenmail.git'
                    }
                    issueManagement {
                        system 'Github Issues'
                        url 'https://github.com/gpc/greenmail/issues'
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'gpc'
                            name 'Grails Plugin Collective'
                        }
                    }
                }
            }
        }
    }
}
